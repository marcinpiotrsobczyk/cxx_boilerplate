# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: ubuntu

variables:
  GIT_DEPTH: 7
  GIT_SUBMODULE_DEPTH: 3
  GIT_SUBMODULE_STRATEGY: "recursive"
  CI_DEBUG_SERVICES: "true"
  FF_NETWORK_PER_BUILD: "true"
stages:
  - build
  - test
  - deploy


build_example:
  stage:
    build
  script:
    - apt update && apt install -y git build-essential cmake
    - cmake -B build -D CMAKE_BUILD_TYPE=Debug
    - cmake --build build
    - build/tests/example_test --gtest_shuffle --gtest_repeat=10
    - sleep 10
  artifacts:
      name: "$CI_JOB_NAME"
      paths:
        - build/tests/example_test
        - build/tests/second_example_test


test_example:
  stage:
    test
  script:
    - apt update && apt install python3 python-is-python3 pip -y
    - time external/gtest-parallel/gtest-parallel build/tests/second_example_test --repeat=7 --workers=$(nproc)
  dependencies: [build_example]


postgres_service_example:
  stage:
    test
  services:
    - name: postgres:12.2-alpine
      alias: db
  variables:
    POSTGRES_DB: custom_db
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_pass
  script:
    - apt update && apt install python3 python-is-python3 pip -y
    - pip install --upgrade pip
    - pip install "psycopg[binary,pool]"
    - pip install pgcli
    - echo "SELECT 1;" | pgcli "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@db:5432/$POSTGRES_DB"
